[{"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/index.js":"1","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/App.js":"2","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/GlobalStyle.js":"3","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/theme.js":"4","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/Routing.js":"5","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/Home.js":"6","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/utils/index.js":"7","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/Container.js":"8","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/nav/Nav.js":"9","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/nav/NavUserDropdown.js":"10","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/categoryFilter/CategoryFilter.js":"11","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/RecipeCard.js":"12","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/Recipe.js":"13","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/authModal/AuthModal.js":"14","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/modal/Modal.js":"15","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/context/index.js":"16","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/context/ModalsContext.js":"17","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/authModal/Signup.js":"18","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/authModal/Login.js":"19","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/StyledInputGroup.js":"20","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/StyledBtn.js":"21","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/ui/Button.js":"22","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/context/AuthContext.js":"23","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/Profile.js":"24","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/hooks/outsideClick.js":"25","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/utils/PrivateRoute.js":"26"},{"size":373,"mtime":1610749023247,"results":"27","hashOfConfig":"28"},{"size":671,"mtime":1610702168337,"results":"29","hashOfConfig":"28"},{"size":1143,"mtime":1610403366753,"results":"30","hashOfConfig":"28"},{"size":197,"mtime":1610403445023,"results":"31","hashOfConfig":"28"},{"size":2453,"mtime":1610753517663,"results":"32","hashOfConfig":"28"},{"size":1985,"mtime":1610753406813,"results":"33","hashOfConfig":"28"},{"size":1281,"mtime":1610659903770,"results":"34","hashOfConfig":"28"},{"size":140,"mtime":1610404028762,"results":"35","hashOfConfig":"28"},{"size":1819,"mtime":1610403574288,"results":"36","hashOfConfig":"28"},{"size":4670,"mtime":1610753044647,"results":"37","hashOfConfig":"28"},{"size":1283,"mtime":1610403173638,"results":"38","hashOfConfig":"28"},{"size":4653,"mtime":1610441703266,"results":"39","hashOfConfig":"28"},{"size":4677,"mtime":1610442471944,"results":"40","hashOfConfig":"28"},{"size":802,"mtime":1610662865438,"results":"41","hashOfConfig":"28"},{"size":1240,"mtime":1610657787420,"results":"42","hashOfConfig":"28"},{"size":432,"mtime":1610659608376,"results":"43","hashOfConfig":"28"},{"size":786,"mtime":1610662838220,"results":"44","hashOfConfig":"28"},{"size":3570,"mtime":1610702747968,"results":"45","hashOfConfig":"28"},{"size":3514,"mtime":1610702255565,"results":"46","hashOfConfig":"28"},{"size":605,"mtime":1610553990343,"results":"47","hashOfConfig":"28"},{"size":700,"mtime":1610658646064,"results":"48","hashOfConfig":"28"},{"size":464,"mtime":1610658218669,"results":"49","hashOfConfig":"28"},{"size":622,"mtime":1610709136293,"results":"50","hashOfConfig":"28"},{"size":145,"mtime":1610707591083,"results":"51","hashOfConfig":"28"},{"size":541,"mtime":1610708269192,"results":"52","hashOfConfig":"28"},{"size":465,"mtime":1610753339514,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"w5huw5",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/index.js",[],["115","116"],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/App.js",["117"],"import {useState} from 'react'\nimport {ThemeProvider} from 'styled-components'\nimport {ToastContainer} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport GlobalStyle from './styles/GlobalStyle'\nimport {lightTheme} from './styles/theme'\n\nimport AuthModal from './components/authModal/AuthModal'\nimport {useModalsContext} from './context'\n\nimport Routing from './Routing'\n\nfunction App() {\n\n  const {showAuthModal} = useModalsContext()\n\n\n  return (\n    <ThemeProvider theme={lightTheme}>\n      <GlobalStyle/>      \n      <Routing/>\n\n      <AuthModal show={showAuthModal}/>\n      <ToastContainer/>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/GlobalStyle.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/theme.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/Routing.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/Home.js",["118","119"],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/utils/index.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/Container.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/nav/Nav.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/nav/NavUserDropdown.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/categoryFilter/CategoryFilter.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/RecipeCard.js",["120"],"import styled from 'styled-components'\nimport {Link} from 'react-router-dom'\n\nimport ClockIcon from '../assets/icons/clock.svg'\nimport PlateIcon from '../assets/icons/plate.svg'\n\nconst StyledRecipeCard = styled.div`\n    width: 220px;\n    height: 250px;\n    margin: 10px; \n    background: ${(props) => props.theme.bgPrimary};\n    border-radius: 8px;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    .recipe_image {\n        height: 120px;\n        width: 100%;\n        overflow: hidden;\n        img {\n            width: 100%;\n            object-fit: cover;\n        }\n        display:flex;\n        align-items: center;\n        justify-content: center;\n        background: ${({theme}) => theme.bgSecondary};\n        color: ${({theme}) => theme.textSecondary};\n    }\n\n\n    .recipe_body {\n        position: relative;\n        flex: 1;\n        width: 100%;\n\n        .open_btn {\n            width: 35px;\n            height: 35px;\n            border-radius: 50%;\n            background: ${({theme}) => theme.primaryColor};\n            color: ${({theme}) => theme.bgPrimary};\n            position: absolute;\n            right: 10px;\n            top: -17px;            \n            display: flex;\n            justify-content: center;\n            align-items: center;\n            cursor: pointer;\n            .material-icons {\n                font-size: 1.1rem;\n            }\n        }\n\n\n        .name {\n            padding: 0px 10px;\n            font-size: 0.9rem;     \n            width: 150px;       \n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n\n        .category {\n            padding: 0px 10px;\n            font-size: 0.8rem;\n            color: ${({theme}) => theme.textSecondary};\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n\n        .info {\n            width:100%;\n            display: flex;\n            height: 40px;       \n            padding: 0px 10px;\n            .info_item {\n                display: flex;\n                align-items:center;\n                margin-right: 20px;\n                font-size: 0.8rem;      \n                color: ${({theme}) => theme.textSecondary};\n                img {\n                    height: 20px;\n                    margin-right:7px;\n                }\n            }\n            \n        }\n\n        .rating {\n            display:flex;\n            align-items: center;\n            padding: 0px 10px;\n            .material-icons {\n                color: ${({theme}) => theme.secondaryColor};\n            }\n        }\n    }\n`\n\nconst RecipeCard = ({\n    recipe,\n    style = {}\n}) => {\n\n    const {\n        category,\n        photo,\n        name,\n        preparationTime,\n        numberOfServings\n\n    } = recipe\n\n    return (\n        <StyledRecipeCard style={style}>\n            <div className='recipe_image'>\n                {photo && photo != 'no-photo.jpg' ?\n                    <img src={`${process.env.REACT_APP_API}/uploads/${photo}`} alt=\"\"/> :\n                    <div>\n                        No Image Available\n                    </div>\n                }\n            </div>\n            <div className='recipe_body'>\n\n                <Link to={`/recipe/${recipe._id}`} className='open_btn'>\n                    <span className=\"material-icons\">\n                        launch\n                    </span>\n                </Link>\n\n\n                <div className='name'>{name}</div>\n                <div className='category'>{category.name}</div>\n\n                <div className='info'>\n                    <div className='info_item'>\n                        <img src={ClockIcon} alt=\"\"/>\n                        {preparationTime} min\n                    </div>\n                    <div className='info_item'>\n                        <img src={PlateIcon} alt=\"\"/>\n                        {numberOfServings}\n                    </div>\n                </div>\n                <div className='rating'>\n                    <span className=\"material-icons\">\n                        star\n                    </span>\n                    <span className=\"material-icons\">\n                        star\n                    </span>\n                    <span className=\"material-icons\">\n                        star\n                    </span>\n                    <span className=\"material-icons\">\n                        star\n                    </span>\n                    <span className=\"material-icons\">\n                        star\n                    </span>\n                </div>\n            </div>\n        </StyledRecipeCard>\n    )\n}\n\nexport default RecipeCard\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/Recipe.js",["121","122"],"import {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport {useParams} from 'react-router-dom'\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nimport {apiCall} from '../utils'\nimport ClockIcon from '../assets/icons/clock.svg'\nimport PlateIcon from '../assets/icons/plate.svg'\n\n\nconst StyledRecipeHeader = styled.div`\n    display:flex;\n    flex-wrap: wrap;\n    margin-top:30px;\n    .image_container {\n        width: 300px;\n        min-width: 300px;\n        height:300px;\n        background: ${({theme}) => theme.secondaryColor};\n        margin: 10px;\n        border-radius: 12px;\n        overflow: hidden;\n        img {\n            width: 100%;\n            min-height:100%;\n            object-fit: cover;\n        }\n    }\n\n    .recipe_details {\n        margin: 10px;\n        min-width: 300px;\n        .prep_serv_info {\n            display:flex;\n            \n            div {\n                display:flex;\n                align-items: center;\n                margin-right:15px;\n                img {\n                    height: 30px;\n                    margin-right: 10px;\n                }\n                span {\n\n                }            \n            }\n        }\n\n    }\n`\n\nconst StyledIngredients = styled.div`\n\n    width:100%;\n    min-height:200px;\n    background: ${(props) => props.theme.bgPrimary};\n    border-radius: 12px;\n    margin: 20px 0px;\n    position: relative;\n    padding: 30px 20px 20px 20px;\n\n    ul {\n        list-style: none;\n        padding: 0;\n        margin: 10px 0px;\n    }\n\n    li {\n        padding-left: 1.3rem; \n        text-indent: -.7rem;\n        margin: 5px 0px;\n    }\n\n    li::before {\n        content: \"• \";\n        color: ${(props) => props.theme.primaryColor}; /* or whatever color you prefer */\n    }\n`\n\nconst StyledSectionTitle = styled.div`\n        width:150px;\n        display:flex;\n        align-items: center;\n        justify-content: center;\n        padding: 0px 10px;\n        height: 50px;\n        font-size: 1.3rem;\n        color: ${(props) => props.theme.bgSecondary};\n        background: ${(props) => props.theme.primaryColor};\n        border-radius: 8px;\n        position: absolute;\n        top: -20px;\n        left: 10px;\n`\n\nconst StyledInstructions = styled.div`\n    width:100%;\n    min-height:200px;\n    background: ${(props) => props.theme.bgPrimary};\n    border-radius: 12px;\n    margin: 20px 0px;\n    position: relative;\n    padding: 30px 20px 20px 20px;\n`\n\nTimeAgo.addDefaultLocale(en)\nconst timeAgo = new TimeAgo('en-US')\n\nconst Recipe = () => {\n\n    var {id} = useParams()\n\n    const [recipe, setRecipe] = useState({})\n\n    useEffect(() => {\n        \n        async function getRecipeData() {\n            const res = await apiCall(`/recipes/${id}`)         \n            setRecipe(res.data)\n            console.log(res.data);\n        }\n        getRecipeData()\n\n    }, [])\n\n    return (\n        <div>\n            <StyledRecipeHeader>\n                <div className='image_container'>\n                    {recipe.photo && recipe.photo != 'no-photo.jpg' ?\n                        <img src={`${process.env.REACT_APP_API}/uploads/${recipe.photo}`} alt=\"\"/> :\n                        <span>\n                            No Image Available\n                        </span>\n                    }\n                </div>\n                <div className='recipe_details'>\n                    <div className='prep_serv_info'>\n                        <div>\n                            <img src={ClockIcon} alt=\"\"/>\n                            <span>{recipe.preparationTime} min</span>\n                        </div>\n                        <div>\n                            <img src={PlateIcon} alt=\"\"/>\n                            <span>{recipe.numberOfServings}</span>\n                        </div>\n                    </div>\n                    <h1>{recipe.name}</h1>\n                    <div>\n                        {recipe.createdAt && timeAgo.format(new Date(recipe.createdAt))}\n                    </div>\n                </div>\n            </StyledRecipeHeader>\n\n            <StyledIngredients>\n                    <StyledSectionTitle>Ingredients</StyledSectionTitle>\n                    <ul>\n                        {recipe.ingredients && recipe.ingredients.map(i => <li key={i}>{i}</li>)}\n                    </ul>\n            </StyledIngredients>\n\n            <StyledInstructions style={{marginTop:'40px'}}>\n                <StyledSectionTitle>Instructions</StyledSectionTitle>\n                <div dangerouslySetInnerHTML={{__html: recipe.preparationDescription}}></div>\n            </StyledInstructions>\n        </div>\n    )\n}\n\nexport default Recipe\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/authModal/AuthModal.js",["123"],"import React from 'react'\nimport styled from 'styled-components'\n\nimport Modal from '../modal/Modal'\nimport Login from './Login'\nimport Signup from './Signup'\n\nimport {useModalsContext} from '../../context'\n\nconst StyledWrapper = styled.div`\n\n    width: 400px;\n    min-height:400px;\n    padding: 20px;\n\n`\n\nconst AuthModal = ({show}) => {\n\n    let {authType, setAuthModal} = useModalsContext()\n\n    const closeModal = () => {\n        setAuthModal('login', false)\n    }\n\n    return (\n        <Modal show={show} onClose={closeModal}>\n            <StyledWrapper>\n                {authType == 'login' ? \n                    <Login /> \n                    :\n                    <Signup />\n                }\n                    \n            </StyledWrapper>\n        </Modal>\n    )\n}\n\nexport default AuthModal\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/modal/Modal.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/context/index.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/context/ModalsContext.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/authModal/Signup.js",["124","125","126","127","128"],"import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport {toast} from 'react-toastify'\n\nimport {StyledInputGroup} from '../../styles/StyledInputGroup'\nimport Button from '../../ui/Button'\n\nimport {useModalsContext, useAuthContext} from '../../context'\nimport {apiCall} from '../../utils'\n\nconst StyledWrapper = styled.form`\n\n    .forgotPassContainer {\n        display: flex;\n        justify-content: flex-end;\n        color: ${({theme}) => theme.textSecondary};\n        cursor: pointer;\n        &:hover {\n            text-decoration: underline;\n            color: ${({theme}) => theme.primaryColor};\n        }\n    }\n\n    .bottom {\n        color: ${({theme}) => theme.textSecondary};\n        text-align: center;\n        a {\n            color: ${({theme}) => theme.secondaryColor};\n            cursor: pointer;\n            &:hover {\n                text-decoration: underline;\n                color: ${({theme}) => theme.primaryColor};\n            }\n        }\n    }\n\n`\n\nconst Signup = () => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [loading, setLoading] = useState(false)\n\n\n    let {setAuthModal} = useModalsContext()\n    let {user, setUser} = useAuthContext()\n\n    const submitHandler = async (e) => {\n        e.preventDefault()        \n\n        if(name != '' && email == '' && password == '') {\n            return toast.error('Please fill all input fields')\n        }\n        setLoading(true)\n        const body = {name, email, password}\n        try {\n            const {success, token, error} = await apiCall('/auth/register', {body})  \n            if(success) {\n                localStorage.setItem('token', token)  \n            }else{\n                setLoading(false)    \n                localStorage.removeItem('token')  \n                return toast.error(error)                \n            }\n            \n        }catch(err) {                        \n            setLoading(false)    \n            return toast.error(err.message)                    \n        }\n\n        const {success, data} = await apiCall('/auth/me')\n\n        if(success) {\n            setUser(data)\n        }else{\n            setLoading(false)    \n            return toast.error('A invalid token provided')\n        }        \n\n        setLoading(false)            \n        setAuthModal('login', false)\n        return toast.success('Successful login')\n    }\n\n    return (\n        <StyledWrapper onSubmit={submitHandler}>\n            <h2>Sign Up</h2>\n            <StyledInputGroup>\n                <label htmlFor=\"\">Name</label>\n                <input onInput={(e) => setName(e.target.value.trim())} type=\"text\" placeholder='John Doe' value={name} required/>\n            </StyledInputGroup>\n            <StyledInputGroup>\n                <label htmlFor=\"\">E-mail</label>\n                <input onInput={(e) => setEmail(e.target.value.trim())} type=\"text\" placeholder='john.doe@email.com' value={email} required/>\n            </StyledInputGroup>\n            <StyledInputGroup>\n                <label htmlFor=\"\">Password</label>\n                <input onInput={(e) => setPassword(e.target.value.trim())} type=\"password\" placeholder='******' required value={password}/>\n            </StyledInputGroup>\n\n            <Button style={{margin: '20px auto'}} loading={loading}>SignUp</Button>\n\n            <div className='bottom'>Already have an account? <a onClick={() => setAuthModal('login', true)}>Login!</a></div>\n        </StyledWrapper>\n    )\n}\n\nexport default Signup\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/authModal/Login.js",["129","130","131","132"],"import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport {toast} from 'react-toastify'\n\nimport {StyledInputGroup} from '../../styles/StyledInputGroup'\nimport Button from '../../ui/Button'\n\nimport {useModalsContext, useAuthContext} from '../../context'\nimport {apiCall} from '../../utils'\n\n\nconst StyledWrapper = styled.form`\n\n    .forgotPassContainer {\n        display: flex;\n        justify-content: flex-end;\n        color: ${({theme}) => theme.textSecondary};\n        cursor: pointer;\n        &:hover {\n            text-decoration: underline;\n            color: ${({theme}) => theme.primaryColor};\n        }\n    }\n\n    .bottom {\n        color: ${({theme}) => theme.textSecondary};\n        text-align: center;\n        a {\n            color: ${({theme}) => theme.secondaryColor};\n            cursor: pointer;\n            &:hover {\n                text-decoration: underline;\n                color: ${({theme}) => theme.primaryColor};\n            }\n        }\n    }\n\n`\n\nconst Login = () => {\n\n    const [email, setEmail] = useState('admin@myrecipes.com')\n    const [password, setPassword] = useState('123456')\n    const [loading, setLoading] = useState(false)\n\n    let {setAuthModal} = useModalsContext()\n    let {user, setUser} = useAuthContext()\n\n    const submitHandler = async (e) => {\n        e.preventDefault()        \n        \n        if(email == '' && password == '') {\n            return toast.error('Please enter email and password')\n        }\n        setLoading(true)\n        const body = {email, password}\n        try {\n            const {success, token} = await apiCall('/auth/login', {body})  \n            console.log({success, token});\n            if(success) {\n                localStorage.setItem('token', token)  \n            }else{\n                localStorage.removeItem('token')  \n                setLoading(false)  \n                return toast.error('Email or password are incorrect')                \n            }\n            \n        }catch(err) {            \n            console.log(err);\n            setLoading(false)            \n            return toast.error(err.message)\n        }\n\n        const {success, data} = await apiCall('/auth/me')\n\n        if(success) {\n            setUser(data)\n        }else{\n            setLoading(false)  \n            return toast.error('A invalid token provided')\n         \n        }        \n\n        setLoading(false)    \n        \n        setAuthModal('login', false)\n        return toast.success('Successful login')\n    }\n    \n\n    return (\n        <StyledWrapper onSubmit={submitHandler}>\n            <h2>Login</h2>\n            <StyledInputGroup>\n                <label htmlFor=\"\">E-mail</label>\n                <input onInput={(e) => setEmail(e.target.value.trim())} type=\"text\" placeholder='john.doe@email.com' value={email} required/>\n            </StyledInputGroup>\n            <StyledInputGroup>\n                <label htmlFor=\"\">Password</label>\n                <input onInput={(e) => setPassword(e.target.value.trim())} type=\"password\" placeholder='******' required value={password}/>\n            </StyledInputGroup>\n\n            <div className='forgotPassContainer'>\n                <span>Forgot password?</span>\n            </div>\n\n            <Button type='submit' style={{margin: '20px auto'}} loading={loading}>Login</Button>\n\n            <div className='bottom'>You don't have an account? <a onClick={() => setAuthModal('signup', true)}>Sign up!</a></div>\n        </StyledWrapper>\n    )\n}\n\nexport default Login\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/StyledInputGroup.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/StyledBtn.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/ui/Button.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/context/AuthContext.js",["133"],"import {createContext, useContext, useState} from 'react'\nimport {apiCall} from '../utils'\n\n\nconst AuthContext = createContext(null)\n\nexport const useAuthContext = () => useContext(AuthContext)\n\nconst AuthProvider = ({children}) => {\n\n    const [user, setUser] = useState(null)    \n\n    const logout = () => {\n        setUser(null)\n        localStorage.removeItem('token')\n    }\n    \n    return (\n        <AuthContext.Provider value={{\n            user,\n            setUser,\n            logout                        \n        }}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/Profile.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/hooks/outsideClick.js",["134","135"],"import React, {useEffect} from 'react'\n\nexport function useOutsideClick(ref, cb) {\n    useEffect(() => {\n    \n        function handleClickOutside(event) {\n          if (ref.current && !ref.current.contains(event.target)) {\n            cb()\n          }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n          // Unbind the event listener on clean up\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n      }, [ref]);\n}","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/utils/PrivateRoute.js",["136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":9,"nodeType":"143","messageId":"144","endLine":1,"endColumn":17},{"ruleId":"141","severity":1,"message":"145","line":4,"column":9,"nodeType":"143","messageId":"144","endLine":4,"endColumn":14},{"ruleId":"141","severity":1,"message":"146","line":4,"column":16,"nodeType":"143","messageId":"144","endLine":4,"endColumn":24},{"ruleId":"147","severity":1,"message":"148","line":121,"column":33,"nodeType":"149","messageId":"150","endLine":121,"endColumn":35},{"ruleId":"151","severity":1,"message":"152","line":126,"column":8,"nodeType":"153","endLine":126,"endColumn":10,"suggestions":"154"},{"ruleId":"147","severity":1,"message":"148","line":132,"column":51,"nodeType":"149","messageId":"150","endLine":132,"endColumn":53},{"ruleId":"147","severity":1,"message":"155","line":29,"column":27,"nodeType":"149","messageId":"150","endLine":29,"endColumn":29},{"ruleId":"141","severity":1,"message":"156","line":48,"column":10,"nodeType":"143","messageId":"144","endLine":48,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":53,"column":17,"nodeType":"149","messageId":"150","endLine":53,"endColumn":19},{"ruleId":"147","severity":1,"message":"155","line":53,"column":32,"nodeType":"149","messageId":"150","endLine":53,"endColumn":34},{"ruleId":"147","severity":1,"message":"155","line":53,"column":50,"nodeType":"149","messageId":"150","endLine":53,"endColumn":52},{"ruleId":"157","severity":1,"message":"158","line":105,"column":62,"nodeType":"159","endLine":105,"endColumn":109},{"ruleId":"141","severity":1,"message":"156","line":47,"column":10,"nodeType":"143","messageId":"144","endLine":47,"endColumn":14},{"ruleId":"147","severity":1,"message":"155","line":52,"column":18,"nodeType":"149","messageId":"150","endLine":52,"endColumn":20},{"ruleId":"147","severity":1,"message":"155","line":52,"column":36,"nodeType":"149","messageId":"150","endLine":52,"endColumn":38},{"ruleId":"157","severity":1,"message":"158","line":109,"column":64,"nodeType":"159","endLine":109,"endColumn":112},{"ruleId":"141","severity":1,"message":"160","line":2,"column":9,"nodeType":"143","messageId":"144","endLine":2,"endColumn":16},{"ruleId":"141","severity":1,"message":"161","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":13},{"ruleId":"151","severity":1,"message":"162","line":17,"column":10,"nodeType":"153","endLine":17,"endColumn":15,"suggestions":"163"},{"ruleId":"141","severity":1,"message":"164","line":1,"column":9,"nodeType":"143","messageId":"144","endLine":1,"endColumn":18},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["167"],"Expected '===' and instead saw '=='.","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'apiCall' is defined but never used.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'cb'. Either include it or remove the dependency array. If 'cb' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["168"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [id]",{"range":"173","text":"174"},"Update the dependencies array to be: [cb, ref]",{"range":"175","text":"176"},[2895,2897],"[id]",[532,537],"[cb, ref]"]