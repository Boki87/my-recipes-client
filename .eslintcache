[{"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/index.js":"1","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/App.js":"2","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/GlobalStyle.js":"3","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/theme.js":"4","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/Routing.js":"5","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/Home.js":"6","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/utils/index.js":"7","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/Container.js":"8","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/nav/Nav.js":"9","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/nav/NavUserDropdown.js":"10","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/categoryFilter/CategoryFilter.js":"11","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/RecipeCard.js":"12","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/Recipe.js":"13","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/authModal/AuthModal.js":"14","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/modal/Modal.js":"15","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/context/index.js":"16","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/context/ModalsContext.js":"17","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/authModal/Signup.js":"18","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/authModal/Login.js":"19","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/StyledInputGroup.js":"20","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/StyledBtn.js":"21","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/ui/Button.js":"22","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/context/AuthContext.js":"23","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/Profile.js":"24","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/hooks/outsideClick.js":"25","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/utils/PrivateRoute.js":"26","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/adminLayout/AdminLayout.js":"27","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/MyRecipes.js":"28","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/adminLayout/AdminNavigsation.js":"29","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/Favorites.js":"30","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/newRecipeModal/NewRecipeModal.js":"31","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/newRecipeModal/RecipeModalHeader.js":"32","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/newRecipeModal/RecipeModalIngredients.js":"33","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/newRecipeModal/RecipeModalDirections.js":"34","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/context/RecipesContext.js":"35","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/utils/createNewEditor.js":"36","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/ParseEditorJs.js":"37","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/StarRating.js":"38","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/FavoritesIcon.js":"39"},{"size":383,"mtime":1611566034982,"results":"40","hashOfConfig":"41"},{"size":704,"mtime":1611135418778,"results":"42","hashOfConfig":"41"},{"size":1195,"mtime":1611613179439,"results":"43","hashOfConfig":"41"},{"size":197,"mtime":1610403445023,"results":"44","hashOfConfig":"41"},{"size":3998,"mtime":1610840536547,"results":"45","hashOfConfig":"41"},{"size":4655,"mtime":1611697662704,"results":"46","hashOfConfig":"41"},{"size":1188,"mtime":1611072347878,"results":"47","hashOfConfig":"41"},{"size":140,"mtime":1610404028762,"results":"48","hashOfConfig":"41"},{"size":2846,"mtime":1611699998918,"results":"49","hashOfConfig":"41"},{"size":5597,"mtime":1610840749692,"results":"50","hashOfConfig":"41"},{"size":2820,"mtime":1611610604006,"results":"51","hashOfConfig":"41"},{"size":5026,"mtime":1611849837883,"results":"52","hashOfConfig":"41"},{"size":8522,"mtime":1611923640634,"results":"53","hashOfConfig":"41"},{"size":802,"mtime":1610919726529,"results":"54","hashOfConfig":"41"},{"size":1264,"mtime":1611007873560,"results":"55","hashOfConfig":"41"},{"size":591,"mtime":1611074906183,"results":"56","hashOfConfig":"41"},{"size":1437,"mtime":1610920333817,"results":"57","hashOfConfig":"41"},{"size":3586,"mtime":1611072409814,"results":"58","hashOfConfig":"41"},{"size":3579,"mtime":1611072409180,"results":"59","hashOfConfig":"41"},{"size":605,"mtime":1610553990343,"results":"60","hashOfConfig":"41"},{"size":700,"mtime":1610658646064,"results":"61","hashOfConfig":"41"},{"size":464,"mtime":1610658218669,"results":"62","hashOfConfig":"41"},{"size":755,"mtime":1610834257331,"results":"63","hashOfConfig":"41"},{"size":3595,"mtime":1611072428276,"results":"64","hashOfConfig":"41"},{"size":541,"mtime":1610708269192,"results":"65","hashOfConfig":"41"},{"size":465,"mtime":1610753339514,"results":"66","hashOfConfig":"41"},{"size":400,"mtime":1610838964589,"results":"67","hashOfConfig":"41"},{"size":2606,"mtime":1611614092841,"results":"68","hashOfConfig":"41"},{"size":2054,"mtime":1611850130725,"results":"69","hashOfConfig":"41"},{"size":1097,"mtime":1611849926946,"results":"70","hashOfConfig":"41"},{"size":8726,"mtime":1611357993944,"results":"71","hashOfConfig":"41"},{"size":4470,"mtime":1611187050823,"results":"72","hashOfConfig":"41"},{"size":2795,"mtime":1611069235454,"results":"73","hashOfConfig":"41"},{"size":1913,"mtime":1611358034293,"results":"74","hashOfConfig":"41"},{"size":3278,"mtime":1611700054394,"results":"75","hashOfConfig":"41"},{"size":535,"mtime":1611333513640,"results":"76","hashOfConfig":"41"},{"size":2407,"mtime":1611442341890,"results":"77","hashOfConfig":"41"},{"size":1084,"mtime":1611697603007,"results":"78","hashOfConfig":"41"},{"size":2152,"mtime":1611849310767,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"w5huw5",{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"82"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/index.js",[],["177","178"],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/App.js",["179"],"import {useState} from 'react'\nimport {ThemeProvider} from 'styled-components'\nimport {ToastContainer} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport GlobalStyle from './styles/GlobalStyle'\nimport {lightTheme} from './styles/theme'\n\nimport AuthModal from './components/authModal/AuthModal'\nimport {useModalsContext} from './context'\n\nimport Routing from './Routing'\n\nfunction App() {\n\n  const {showAuthModal} = useModalsContext()\n\n\n  return (\n    <ThemeProvider theme={lightTheme}>\n      <GlobalStyle/>      \n      <Routing/>\n\n      <AuthModal show={showAuthModal}/>\n      <ToastContainer \n        autoClose={2000}\n      />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/GlobalStyle.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/theme.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/Routing.js",["180","181","182"],"import {Route, Switch, useLocation} from 'react-router-dom'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {PrivateRoute} from './utils/PrivateRoute'\n\nimport Nav from './components/nav/Nav'\nimport Home from './pages/Home'\nimport Recipe from './pages/Recipe'\nimport Profile from './pages/Profile'\nimport MyRecipes from './pages/MyRecipes'\nimport Favorites from './pages/Favorites'\n\nimport {Container} from './styles/Container'\n\nconst pageVariants = {\n    initial: {\n      opacity: 0,\n      y: 30\n    },\n    in: {\n      opacity: 1,\n      y:0\n    },\n    out: {\n      opacity: 0,\n      y:30\n    },\n  }\n\n\nconst Routing = () => {\n    const location = useLocation()\n    return (\n            <>\n            <Nav/>\n            <Container style={{height:'calc(100vh - 55px)', margin: '0 auto', overflow:'auto'}}>\n                {/* <Route render={({location}) => ( */}\n                    {/* <AnimatePresence exitBeforeEnter> */}\n                        <Switch location={location} key={location.pathname}>\n                            <Route exact path='/'>\n                                {/* <motion.div\n                                    initial=\"initial\"\n                                    animate=\"in\"\n                                    exit=\"out\"\n                                    variants={pageVariants}\n                                > */}\n                                    <Home />\n                                {/* </motion.div> */}\n                            </Route>\n                            <Route exact path='/recipe/:id'>\n                                {/* <motion.div\n                                    initial=\"initial\"\n                                    animate=\"in\"\n                                    exit=\"out\"\n                                    variants={pageVariants}\n                                > */}\n                                    <Recipe />\n                                {/* </motion.div> */}\n                                \n                            </Route>\n                            \n                                <PrivateRoute path='/profile'>\n                                    {/* <motion.div\n                                        initial=\"initial\"\n                                        animate=\"in\"\n                                        exit=\"out\"\n                                        variants={pageVariants}\n                                    > */}\n                                        <Profile />\n                                    {/* </motion.div> */}\n                                    \n                                </PrivateRoute>\n                                <PrivateRoute path='/my-recipes'>\n                                    {/* <motion.div\n                                        initial=\"initial\"\n                                        animate=\"in\"\n                                        exit=\"out\"\n                                        variants={pageVariants}\n                                    > */}\n                                        <MyRecipes />\n                                    {/* </motion.div> */}\n                                    \n                                </PrivateRoute>\n                                <PrivateRoute path='/favorites'>\n                                    {/* <motion.div\n                                        initial=\"initial\"\n                                        animate=\"in\"\n                                        exit=\"out\"\n                                        variants={pageVariants}\n                                    > */}\n                                        <Favorites />\n                                    {/* </motion.div> */}\n                                    \n                                </PrivateRoute>\n                            \n                        </Switch>\n                     {/* </AnimatePresence>\n                )} /> */}\n            </Container>\n        </>\n    )\n}\n\nexport default Routing\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/Home.js",["183","184","185"],"import {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport ReactPaginate from 'react-paginate'\n\nimport CategoryFilter from '../components/categoryFilter/CategoryFilter'\nimport RecipeCard from '../components/RecipeCard'\n\nimport {useModalsContext, useAuthContext, useRecipeContext} from '../context'\n\n\n\nconst StyledWrapper = styled.div`\n\n.pagination_container {\n        display:flex;\n        list-style: none;\n        justify-content: center;\n        margin-top: 30px;\n        li {\n            width: 30px;\n            height:30px;            \n            border-radius: 4px;\n            border: 1px solid ${({theme}) => theme.primaryColor};\n            color: ${({theme}) => theme.primaryColor};;\n            margin: 0px 3px;\n            cursor: pointer;\n            a {\n                color: inherit;\n                width:100%;\n                height:100%;\n                display:flex;\n                justify-content:center;\n                align-items:center;\n                outline: none;\n            }\n\n            a:hover {\n                color: inherit;\n            }\n\n        }\n\n        li:hover {\n            border: 1px solid ${({theme}) => theme.primaryColor};\n            color: ${({theme}) => theme.primaryColor};\n        }\n\n        .active_pagination {\n            color: #fff;\n            background: ${({theme}) => theme.primaryColor};\n            border: 1px solid ${({theme}) => theme.primaryColor};\n            outline: none;\n        }\n\n        .active_pagination:hover {\n            color: #fff;\n        }\n        \n    }\n\n`\n\n\nconst StyledRecipesWrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;   \n\n    @keyframes spinner {\n        to {transform: rotate(-360deg)}\n    }\n\n    .loader {\n        animation: spinner 1.5s linear infinite;\n        font-size: 3rem;\n        color: ${({theme}) => theme.primaryColor};\n    }\n\n`\n\nconst StyledHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n\n    .brand {\n        color: ${({theme}) => theme.primaryColor};\n        text-decoration: underline;\n    }\n`\n\nconst Home = () => {\n\n    const {recipes, \n        getRecipes, \n        recipesLoading, \n        setNameQuery, \n        setCategoryQuery,  \n        numOfPages,\n        page,\n        setPage} = useRecipeContext()\n\n    let {setAuthModal} = useModalsContext()\n    let {user} = useAuthContext()\n\n    useEffect( () => {\n        setNameQuery('')\n        setCategoryQuery('')\n        getRecipes()\n    }, [])\n\n\n    const paginationClickHandler = ({selected}) => {\n        setPage(selected)\n    }\n\n    return (\n        <StyledWrapper>\n            {!user &&  \n                <StyledHeader>\n                    <p>Welcome to <span className='font2 brand'>My Recipes</span></p>\n                    <p>Explore below a wast collection of user submitted recipes.</p>\n                    <p>To submit your own <span onClick={() => setAuthModal('login', true)} className='link'>Login</span> or <span onClick={() => setAuthModal('signup', true)} className='link'>SignUp</span> if you don't have an account.</p>\n                </StyledHeader>\n            }\n\n            <CategoryFilter />\n\n\n            \n\n            <StyledRecipesWrapper>\n\n                {recipesLoading && \n                    <span className=\"material-icons loader\">\n                        cached\n                    </span>\n                }\n\n                {!recipesLoading && recipes && recipes.map(recipe => \n                    <RecipeCard \n                        recipe={recipe}\n                        key={recipe._id}\n                    />\n                )}\n                \n                {\n                    !recipesLoading && recipes && recipes.length == 0 && \n                    <p>No Recipes found</p>\n                }\n                                \n            </StyledRecipesWrapper>\n            \n                <ReactPaginate                     \n                        onPageChange={paginationClickHandler}\n                        previousLabel={<span className=\"material-icons\">navigate_before</span>}\n                        nextLabel={<span className=\"material-icons\">keyboard_arrow_right</span>}\n                        containerClassName=\"pagination_container\"\n                        activeClassName={'active_pagination'}\n                        pageCount={numOfPages}       \n                        forcePage={page}             \n                        pageRangeDisplayed={2}\n                        marginPagesDisplayed={1}\n                    />\n            \n        </StyledWrapper>\n    )\n}\n\nexport default Home\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/utils/index.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/Container.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/nav/Nav.js",["186","187","188","189","190"],"import {useState, useEffect} from 'react'\nimport {Link, useLocation, useHistory} from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport Logo from '../../assets/icons/restaurant.svg'\nimport NavUserDropdown from './NavUserDropdown'\n\nimport {Container} from '../../styles/Container'\n\nimport {useRecipeContext} from '../../context'\n\n\nconst NavWrapper = styled.nav`\n    background: ${(props) => props.theme.bgPrimary};\n    width: 100%;\n    height: 55px;\n    border-bottom: 1px solid ${({theme}) => theme.bgSecondary};\n    display: flex;\n    justify-content: center;\n    align-items:center;\n\n`\n\nconst StyledLogo = styled(Link)`\n    height:100%;\n    margin-left: 20px;\n    display: flex;    \n    align-items:center;\n    color: ${({theme}) => theme.primaryColor};\n    img {\n        height: 80%;        \n        margin-right: 10px;\n    }\n\n\n`\nconst StyledSearch = styled.div`\n\n    flex: 1;\n    height:100%;\n    position: relative;\n    input {\n        font-size: 1.1rem;\n        width: 100%;\n        max-width: 400px;\n        height:100%;\n        border: none;\n        outline: none;\n        padding: 0px 10px 0px 50px;\n    }\n\n    .material-icons {\n        font-size: 1.1.rem;\n        position: absolute;\n        left:20px;\n        top:15px;\n    }\n\n`\n\n\n\nconst Nav = () => {\n\n    let location = useLocation()\n    let history = useHistory()\n\n    let {setNameQuery} = useRecipeContext()\n\n    let [searchQuery, setSearchQuery] = useState('')\n\n    let [route, setRoute] = useState('')\n\n    useEffect(() => {\n        //reset search query on route change\n        if(route != location.pathname) {            \n            setSearchQuery('')\n            setRoute(location.pathname)\n        }\n    }, [location.pathname])\n\n    useEffect(() => {\n        if(location.pathname != '/' && location.pathname != '/my-recipes') {\n            history.push('/')\n        }\n\n        const timer = setTimeout(() => {\n            searchHandler()\n        }, 1000)\n\n        return () => clearTimeout(timer)\n    }, [searchQuery])\n\n\n    const searchHandler = () => {              \n            setNameQuery(searchQuery)                    \n    }\n\n    return (\n        <NavWrapper>\n            <Container style={{display:'flex', alignItems:'center', height:'100%'}}>\n                <StyledLogo to='/' className='font2'>\n                    <img src={Logo} alt=\"\"/>\n                    My Recipes\n                </StyledLogo>\n\n                <StyledSearch>\n                    <input type=\"search\" value={searchQuery} onChange={(e) => setSearchQuery(e.target.value)} placeholder='Search recipe...'/>\n\n                    <span className=\"material-icons\">\n                        search\n                    </span>\n                </StyledSearch>\n\n                <NavUserDropdown />\n            </Container>\n            \n        </NavWrapper>\n    )\n}\n\nexport default Nav\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/nav/NavUserDropdown.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/categoryFilter/CategoryFilter.js",["191","192","193","194","195"],"import React, {useEffect, useState} from 'react'\nimport styled, {createGlobalStyle, css} from 'styled-components'\nimport {useLocation} from 'react-router-dom'\n\nimport {categoriesIcons} from '../../utils'\n\nimport {apiCall} from '../../utils'\nimport {useRecipeContext} from '../../context'\n\nexport const StyledCatBtn = styled.div`\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    margin: 0px 10px;\n    background: ${({theme}) => theme.primaryColor};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    img {\n        height: 50px;\n    }\n    ${(props) => props.active && props.active == props.id && \n        css`            \n            background: ${({theme}) => theme.secondaryColor};\n        `\n    }\n`\n\nexport const CategoryBtn = ({id, icon, active, onClick}) => {    \n    return (\n        <StyledCatBtn onClick={onClick} active={active} id={id}>\n            <img src={icon} alt=\"\"/>\n        </StyledCatBtn>\n    )\n}\n\n\nconst StyledCategoryFilterWrapper = styled.div`\n    height: 60px;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 20px;\n   \n`\n\nconst StyledH = styled.div`    \n    display: flex;\n    justify-content: center;\n    margin-top: 20px;    \n    margin-bottom: 10px;\n`\n\nconst CategoryFilter = () => {\n\n    let location = useLocation()\n\n    const [categories, setCategories] = useState([])\n\n    const [selectedCat, setSelectedCat] = useState('')\n\n\n    const {setCategoryQuery} = useRecipeContext()\n\n\n    let [route, setRoute] = useState('')\n\n    useEffect(() => {\n        //reset category query on route change\n        if(route != location.pathname) {            \n            setRoute(location.pathname)\n            setSelectedCat('')\n            setCategoryQuery('')            \n        }\n    }, [location.pathname])\n\n    const setCategory = (id) => {\n        if(selectedCat == id) {\n            setSelectedCat('')\n            setCategoryQuery('')\n        }else{\n            setSelectedCat(id)\n            setCategoryQuery(id)\n        }\n    }\n\n    useEffect(() => {\n        async function getCategories() {\n            let res = await apiCall('/categories')\n            \n            if(res.success) {\n                setCategories(res.data)\n            }\n        }\n        getCategories()\n    }, [])\n\n    return (\n        <>\n            <StyledH>Filter by category</StyledH>\n            <StyledCategoryFilterWrapper>\n                \n                {categories.map(cat => \n                    <CategoryBtn title={cat.name} active={selectedCat} onClick={() => setCategory(cat._id)} id={cat._id} icon={categoriesIcons[cat.name]} key={`iconBtn${cat.name.split(\" \").join('_')}`}/>\n                )}\n            </StyledCategoryFilterWrapper>\n        </>\n    )\n}\n\nexport default CategoryFilter\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/RecipeCard.js",["196","197","198"],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/Recipe.js",["199","200","201","202"],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/authModal/AuthModal.js",["203"],"import React from 'react'\nimport styled from 'styled-components'\n\nimport Modal from '../modal/Modal'\nimport Login from './Login'\nimport Signup from './Signup'\n\nimport {useModalsContext} from '../../context'\n\nconst StyledWrapper = styled.div`\n\n    width: 400px;\n    min-height:400px;\n    padding: 20px;\n\n`\n\nconst AuthModal = ({show}) => {\n\n    let {authType, setAuthModal} = useModalsContext()\n\n    const closeModal = () => {\n        setAuthModal('login', false)\n    }\n\n    return (\n        <Modal show={show} onClose={closeModal}>\n            <StyledWrapper>\n                {authType == 'login' ? \n                    <Login /> \n                    :\n                    <Signup />\n                }\n                    \n            </StyledWrapper>\n        </Modal>\n    )\n}\n\nexport default AuthModal\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/modal/Modal.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/context/index.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/context/ModalsContext.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/authModal/Signup.js",["204","205","206","207","208"],"import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport {toast} from 'react-toastify'\n\nimport {StyledInputGroup} from '../../styles/StyledInputGroup'\nimport Button from '../../ui/Button'\n\nimport {useModalsContext, useAuthContext} from '../../context'\nimport {apiCall} from '../../utils'\n\nconst StyledWrapper = styled.form`\n\n    .forgotPassContainer {\n        display: flex;\n        justify-content: flex-end;\n        color: ${({theme}) => theme.textSecondary};\n        cursor: pointer;\n        &:hover {\n            text-decoration: underline;\n            color: ${({theme}) => theme.primaryColor};\n        }\n    }\n\n    .bottom {\n        color: ${({theme}) => theme.textSecondary};\n        text-align: center;\n        a {\n            color: ${({theme}) => theme.secondaryColor};\n            cursor: pointer;\n            &:hover {\n                text-decoration: underline;\n                color: ${({theme}) => theme.primaryColor};\n            }\n        }\n    }\n\n`\n\nconst Signup = () => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [loading, setLoading] = useState(false)\n\n\n    let {setAuthModal} = useModalsContext()\n    let {user, setUser} = useAuthContext()\n\n    const submitHandler = async (e) => {\n        e.preventDefault()        \n\n        if(name != '' && email == '' && password == '') {\n            return toast.error('Please fill all input fields')\n        }\n        setLoading(true)\n        const body = JSON.stringify({name, email, password})\n        try {\n            const {success, token, error} = await apiCall('/auth/register', {body})  \n            if(success) {\n                localStorage.setItem('token', token)  \n            }else{\n                setLoading(false)    \n                localStorage.removeItem('token')  \n                return toast.error(error)                \n            }\n            \n        }catch(err) {                        \n            setLoading(false)    \n            return toast.error(err.message)                    \n        }\n\n        const {success, data} = await apiCall('/auth/me')\n\n        if(success) {\n            setUser(data)\n        }else{\n            setLoading(false)    \n            return toast.error('A invalid token provided')\n        }        \n\n        setLoading(false)            \n        setAuthModal('login', false)\n        return toast.success('Successful login')\n    }\n\n    return (\n        <StyledWrapper onSubmit={submitHandler}>\n            <h2>Sign Up</h2>\n            <StyledInputGroup>\n                <label htmlFor=\"\">Name</label>\n                <input onInput={(e) => setName(e.target.value.trim())} type=\"text\" placeholder='John Doe' value={name} required/>\n            </StyledInputGroup>\n            <StyledInputGroup>\n                <label htmlFor=\"\">E-mail</label>\n                <input onInput={(e) => setEmail(e.target.value.trim())} type=\"text\" placeholder='john.doe@email.com' value={email} required/>\n            </StyledInputGroup>\n            <StyledInputGroup>\n                <label htmlFor=\"\">Password</label>\n                <input onInput={(e) => setPassword(e.target.value.trim())} type=\"password\" placeholder='******' required value={password}/>\n            </StyledInputGroup>\n\n            <Button style={{margin: '20px auto'}} loading={loading}>SignUp</Button>\n\n            <div className='bottom'>Already have an account? <a onClick={() => setAuthModal('login', true)}>Login!</a></div>\n        </StyledWrapper>\n    )\n}\n\nexport default Signup\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/authModal/Login.js",["209","210","211","212"],"import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport {toast} from 'react-toastify'\n\nimport {StyledInputGroup} from '../../styles/StyledInputGroup'\nimport Button from '../../ui/Button'\n\nimport {useModalsContext, useAuthContext} from '../../context'\nimport {apiCall} from '../../utils'\n\n\nconst StyledWrapper = styled.form`\n\n    .forgotPassContainer {\n        display: flex;\n        justify-content: flex-end;\n        color: ${({theme}) => theme.textSecondary};\n        cursor: pointer;\n        &:hover {\n            text-decoration: underline;\n            color: ${({theme}) => theme.primaryColor};\n        }\n    }\n\n    .bottom {\n        color: ${({theme}) => theme.textSecondary};\n        text-align: center;\n        a {\n            color: ${({theme}) => theme.secondaryColor};\n            cursor: pointer;\n            &:hover {\n                text-decoration: underline;\n                color: ${({theme}) => theme.primaryColor};\n            }\n        }\n    }\n\n`\n\nconst Login = () => {\n\n    const [email, setEmail] = useState('admin@myrecipes.com')\n    const [password, setPassword] = useState('123456')\n    const [loading, setLoading] = useState(false)\n\n    let {setAuthModal} = useModalsContext()\n    let {user, setUser} = useAuthContext()\n\n    const submitHandler = async (e) => {\n        e.preventDefault()        \n        \n        if(email == '' && password == '') {\n            return toast.error('Please enter email and password')\n        }\n        setLoading(true)\n        const body = JSON.stringify({email, password})\n        try {\n            const {success, token} = await apiCall('/auth/login', {body})  \n            console.log({success, token});\n            if(success) {\n                localStorage.setItem('token', token)  \n            }else{\n                localStorage.removeItem('token')  \n                setLoading(false)  \n                return toast.error('Email or password are incorrect')                \n            }\n            \n        }catch(err) {            \n            console.log(err);\n            setLoading(false)            \n            return toast.error(err.message)\n        }\n\n        const {success, data} = await apiCall('/auth/me')\n\n        if(success) {\n            localStorage.setItem('user', JSON.stringify(data))\n            setUser(data)\n        }else{\n            setLoading(false)  \n            return toast.error('A invalid token provided')\n         \n        }        \n\n        setLoading(false)    \n        \n        setAuthModal('login', false)\n        return toast.success('Successful login')\n    }\n    \n\n    return (\n        <StyledWrapper onSubmit={submitHandler}>\n            <h2>Login</h2>\n            <StyledInputGroup>\n                <label htmlFor=\"\">E-mail</label>\n                <input onInput={(e) => setEmail(e.target.value)} type=\"text\" placeholder='john.doe@email.com' value={email} required/>\n            </StyledInputGroup>\n            <StyledInputGroup>\n                <label htmlFor=\"\">Password</label>\n                <input onInput={(e) => setPassword(e.target.value)} type=\"password\" placeholder='******' required value={password}/>\n            </StyledInputGroup>\n\n            <div className='forgotPassContainer'>\n                <span>Forgot password?</span>\n            </div>\n\n            <Button type='submit' style={{margin: '20px auto'}} loading={loading}>Login</Button>\n\n            <div className='bottom'>You don't have an account? <a onClick={() => setAuthModal('signup', true)}>Sign up!</a></div>\n        </StyledWrapper>\n    )\n}\n\nexport default Login\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/StyledInputGroup.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/styles/StyledBtn.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/ui/Button.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/context/AuthContext.js",["213","214"],"import {createContext, useContext, useState, useEffect} from 'react'\nimport {apiCall} from '../utils'\n\n\nconst AuthContext = createContext(null)\n\nexport const useAuthContext = () => useContext(AuthContext)\n\nconst AuthProvider = ({children}) => {\n\n    const localSt = JSON.parse(localStorage.getItem('user'))\n\n    const [user, setUser] = useState(localSt ? localSt : null)    \n\n    const logout = () => {\n        setUser(null)\n        localStorage.removeItem('token')\n        localStorage.removeItem('user')\n    }\n    \n    return (\n        <AuthContext.Provider value={{\n            user,\n            setUser,\n            logout                        \n        }}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthProvider\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/Profile.js",["215","216","217","218"],"import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport {toast} from 'react-toastify'\n\nimport AdminLayout from '../components/adminLayout/AdminLayout'\nimport Button from '../ui/Button'\nimport {StyledInputGroup} from '../styles/StyledInputGroup'\nimport {useAuthContext} from '../context'\nimport {apiCall} from '../utils'\n\nconst StyledForm = styled.form`\n    width: 100%;\n    max-width: 500px;\n    min-height: 400px;\n    background: ${({theme})=>theme.bgPrimary};\n    border-radius: 12px;\n    padding: 20px;\n    margin: 30px auto 10px;\n`\n\nconst Profile = () => {\n\n    const {user, setUser} = useAuthContext()\n\n    const [userDetails, setUserDetils] = useState({...user})\n    \n    const [currentPassword, setCurrentPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [loading, setLoading] = useState(false)\n\n\n    const submitHandler = async (e) => {\n        e.preventDefault()\n\n        if(userDetails.email == '' && userDetails.name == '') {\n            return toast.error('Please enter name and email')\n        }\n\n        setLoading(true)\n\n        const body = JSON.stringify({name: userDetails.name, email:userDetails.email})\n        try{\n            const updatedUser = await apiCall('/auth/updatedetails', {body, method: 'PUT'})\n            if(updatedUser.success) {\n                console.log(JSON.stringify(updatedUser));\n                localStorage.setItem('user', JSON.stringify(updatedUser.data))\n                setUser(updatedUser.data)\n            }else{\n                setLoading(false)\n                return toast.error('Could not update user details')\n            }\n\n            if(currentPassword != '' && newPassword != '') {\n                    const updatedPassword = await apiCall('/auth/updatepassword', {body:{currentPassword, newPassword},method: 'PUT'})\n        \n                    if(updatedPassword.success) {\n                        localStorage.setItem('token', updatedPassword.token) \n                    }else{\n                        setLoading(false)\n                        return toast.error('Current password is incorrect')\n                    }\n            }\n\n            setLoading(false)\n        }catch(err) {\n            setLoading(false)\n            return toast.error(err.message)\n        }\n    }\n\n    return (\n        <AdminLayout>\n\n            <StyledForm onSubmit={submitHandler}>    \n                <StyledInputGroup>\n                    <label>Name</label>\n                    <input type='text' value={userDetails.name} onInput={(e) => setUserDetils({...userDetails, name: e.target.value})} required/>\n                </StyledInputGroup>\n                <StyledInputGroup>\n                    <label>Email</label>\n                    <input type='email' value={userDetails.email} onInput={(e) => setUserDetils({...userDetails, email: e.target.value})} required/>\n                </StyledInputGroup>\n                <StyledInputGroup>\n                    <label>Current Password</label>\n                    <input type='text' value={currentPassword} onInput={(e) => setCurrentPassword(e.target.value.trim())}/>\n                </StyledInputGroup>\n                <StyledInputGroup>\n                    <label>New Password</label>\n                    <input type='text' value={newPassword} onInput={(e) => setNewPassword(e.target.value.trim())}/>\n                </StyledInputGroup>\n\n\n                <Button type='submit' style={{margin: '20px auto'}} loading={loading}>Update</Button>\n            </StyledForm>\n            \n        </AdminLayout>\n    )\n}\n\nexport default Profile\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/hooks/outsideClick.js",["219","220"],"import React, {useEffect} from 'react'\n\nexport function useOutsideClick(ref, cb) {\n    useEffect(() => {\n    \n        function handleClickOutside(event) {\n          if (ref.current && !ref.current.contains(event.target)) {\n            cb()\n          }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n          // Unbind the event listener on clean up\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n      }, [ref]);\n}","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/utils/PrivateRoute.js",["221"],"import {useEffect} from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport {useAuthContext} from '../context'\n\nexport const PrivateRoute = ({ children, ...rest }) => {\n    \n    let {user} = useAuthContext();    \n    \n    return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          user ? (\n            children\n          ) : (\n            <Redirect\n                to='/'\n            />\n          )\n        }\n      />\n    );\n  }","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/adminLayout/AdminLayout.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/MyRecipes.js",["222","223","224","225","226"],"import React, {useState, useEffect} from 'react'\nimport {toast} from 'react-toastify'\nimport styled from 'styled-components'\n\nimport NewRecipeModal from '../components/newRecipeModal/NewRecipeModal'\nimport AdminLayout from '../components/adminLayout/AdminLayout'\nimport CategoryFilter from '../components/categoryFilter/CategoryFilter'\nimport RecipeCard from '../components/RecipeCard'\nimport {useAuthContext, useModalsContext, useRecipeContext} from '../context'\nimport {apiCall} from '../utils'\n\nconst StyledRecipesWrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;    \n\n    @keyframes spinner {\n        to {transform: rotate(-360deg)}\n    }\n\n    .loader {\n        animation: spinner 1.5s linear infinite;\n        font-size: 3rem;\n        color: ${({theme}) => theme.primaryColor};\n    }\n`\n\nconst StyledAddBtn = styled.button`\n    width: 60px;\n    height:60px;\n    border-radius: 50%;\n    background: ${({theme}) => theme.primaryColor};\n    color: ${({theme}) => theme.bgSecondary};\n    display:flex;\n    justify-content: center;\n    align-items:center;\n    border: none;\n    font-size: 2rem;\n    position: fixed;\n    bottom: 30px;\n    right: 30px;\n    z-index: 11;\n`\n\n\nconst MyRecipes = () => {\n\n    const {showNewRecipeModal, setNewRecipeModal} = useModalsContext()\n    const {user} = useAuthContext()\n    const {myRecipes, recipesLoading, getMyRecipes} = useRecipeContext()\n    \n\n    useEffect(() => {\n        getMyRecipes(user._id)\n    }, [])\n\n    return (\n        <AdminLayout>\n            <CategoryFilter />\n            <StyledRecipesWrapper>\n\n                {recipesLoading && \n                    <span className=\"material-icons loader\">\n                        cached\n                    </span>\n                }\n\n                {   \n                    !recipesLoading && \n                    myRecipes &&\n                    myRecipes.map(recipe =>      \n                        <RecipeCard \n                            recipe={recipe}\n                            key={recipe._id}\n                        />                \n                    )\n                }\n\n                {\n                    !recipesLoading && myRecipes && myRecipes.length == 0 &&\n                    \n                    <p>\n                        No recipes...\n                    </p>\n                    \n                }\n\n\n            </StyledRecipesWrapper>\n\n            <StyledAddBtn onClick={() => setNewRecipeModal('Add', true)}>+</StyledAddBtn>\n\n            <NewRecipeModal show={showNewRecipeModal}/>\n        </AdminLayout>\n    )\n}\n\nexport default MyRecipes\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/adminLayout/AdminNavigsation.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/pages/Favorites.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/newRecipeModal/NewRecipeModal.js",["227","228","229","230","231"],"import React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\nimport {toast} from 'react-toastify'\n\nimport Modal from '../modal/Modal'\nimport {apiCall} from '../../utils'\nimport {useModalsContext, useRecipeContext, useAuthContext} from '../../context'\n\n\n\nimport RecipeModalHeader from './RecipeModalHeader'\nimport RecipeModalIngredients from './RecipeModalIngredients'\nimport RecipeModalDirections from './RecipeModalDirections'\n\nimport Button from '../../ui/Button'\n\nexport const StyledWrapper = styled.div`\n\n    width: 90vw;\n    max-width: 800px;\n    min-height:90vh;\n    padding: 20px;\n    position: relative;\n    .closeBtn {\n        width: 30px;\n        height:30px;\n        border-radius: 50%;\n        background: ${({theme}) => theme.primaryColor};\n        color: ${({theme}) => theme.bgPrimary};\n        position: absolute;\n        top:5px;\n        right: 5px;\n        cursor: pointer;\n        display:flex;\n        align-items:center;\n        justify-content: center;\n    }\n\n`\nconst NewRecipeModal = ({show}) => {\n\n    const {getMyRecipes, recipeToEdit, setRecipeToEdit} = useRecipeContext()\n    const {setNewRecipeModal, newRecipeModalState} = useModalsContext()\n    useEffect(() => {\n        if(recipeToEdit) {            \n            async function getRecipe() {                \n                try {\n                    const res = await apiCall(`/recipes/${recipeToEdit}`)\n                    \n                    if(res.success) {\n                        \n                        let {\n                            photo,\n                            name,\n                            category,\n                            ingredients,\n                            numberOfServings,\n                            preparationTime,\n                            preparationDescription\n                        } = res.data\n\n                        setRecipe({\n                            name,\n                            category: category._id,\n                            ingredients,\n                            numberOfServings,\n                            preparationTime,\n                            preparationDescription: preparationDescription != '' ? JSON.parse(preparationDescription) : {}\n                        })\n\n                        setPhoto(`${process.env.REACT_APP_API}/uploads/${photo}`)\n                    }else{\n                        return toast.error('Something went wrong getting the recipe data')\n                    }\n                }catch(err) {\n                    console.log(err);\n                }\n            }\n\n            getRecipe()\n        }\n    }, [recipeToEdit])\n\n    \n    const {user} = useAuthContext()\n\n    \n\n    const [loading, setLoading] = useState(false)\n\n    const [photo, setPhoto] = useState('')\n\n    const [recipe, setRecipe] = useState({        \n        name: '',\n        category: '',\n        ingredients: [],\n        numberOfServings: 1,\n        preparationTime: 1,\n        preparationDescription: null\n    })\n\n    \n\n\n    const closeModal = () => {\n        setPhoto('')\n        setRecipe({\n            name: '',\n            category: '',\n            ingredients: [],\n            numberOfServings: 1,\n            preparationTime: 1,\n            preparationDescription: null\n        })\n        setNewRecipeModal('Add', false)\n        setRecipeToEdit(null)\n    }\n\n    const changeHandler = (prop, val) => {\n        const recipeCopy = {...recipe}\n        recipeCopy[prop] = val\n        setRecipe(recipeCopy)\n    }\n\n    const addIngredient = (item) => {\n        const ingCopy = [...recipe.ingredients, item]\n        changeHandler('ingredients', ingCopy)\n    }\n\n    const deleteIngredient = (index) => {\n        const ingCopy = recipe.ingredients.filter( (item, i) => i != index)\n        changeHandler('ingredients', ingCopy)\n    }\n\n\n\n    const submitHandler = async () => {\n\n        \n        if(recipe.name.trim() == '' || recipe.category == '') {            \n            return toast.error('Please ad a name and select a category')\n        }\n\n\n        setLoading(true)\n        try {\n            let url = '/recipes'\n            const body = JSON.stringify({...recipe, preparationDescription: JSON.stringify(recipe.preparationDescription)})\n            \n            let options = {\n                body,\n                method: 'POST'\n            }\n            if(recipeToEdit){\n                options.method = 'PUT'\n                url = `/recipes/${recipeToEdit}`\n            }\n \n            const res = await apiCall(url, options)\n            \n            if(res.success) {\n\n                if(typeof(photo) === 'object' && photo != '') {                    \n                    \n                    \n                    var formdata = new FormData();\n                    formdata.append(\"file\", photo, \"tomato.jpeg\");\n\n                    var requestOptions = {\n                        method: 'PUT',\n                        body: formdata,\n                        redirect: 'follow'\n                    };\n\n                    let uploadPhotoRes = await fetch(`${process.env.REACT_APP_API_BACKEND_URL}/recipes/${res.data._id}/photo`, requestOptions)\n                    \n                    let uploadPhoto = await uploadPhotoRes.json()\n                    console.log(uploadPhoto);\n                    if(uploadPhoto.success) {\n                        console.log(uploadPhoto);\n                    }else{\n                        setLoading(false)\n                        return toast.error(uploadPhoto.error)        \n                    }\n\n                }\n\n\n                getMyRecipes(user._id)\n                setLoading(false)\n                closeModal()\n                return toast.info('Recipe saved')\n            }else{\n                setLoading(false)\n                console.log(res);\n                return toast.error(res.error)\n            }\n        }catch (err) {\n            setLoading(false)\n            return toast.error(err.message)\n        }\n\n    }\n\n    const deleteHandler = async () => {\n        \n        try{\n            setLoading(true)\n            const res = await apiCall(`/recipes/${recipeToEdit}`, {method: 'DELETE'})\n            \n            if(res.success) {\n\n                getMyRecipes(user._id)\n                setLoading(false)\n                closeModal()\n                toast.success('Recipe deleted successfully')\n            }else{\n                toast.error('Could not delete recipe, please try again')\n            }\n\n            setLoading(false)\n        }catch(err) {\n            setLoading(false)\n            console.log(err);\n            return toast.error(err.message)\n        }\n    }\n\n    return (\n        <Modal show={show} onClose={closeModal}>\n            <StyledWrapper>\n                    <div onClick={closeModal} className='closeBtn'>\n                        <span className=\"material-icons\">\n                            close\n                        </span>\n                    </div>\n                \n                    <h1>{newRecipeModalState} Recipe</h1>\n\n                    <RecipeModalHeader \n                        name={recipe.name}\n                        photo={photo}\n                        category={recipe.category}\n                        preparationTime={recipe.preparationTime}\n                        numberOfServings={recipe.numberOfServings}\n                        changeHandler={changeHandler}\n                        setPhoto={setPhoto}\n                    />\n\n                    <RecipeModalIngredients ingredients={recipe.ingredients} addIngredient={addIngredient} deleteIngredient={deleteIngredient}/>\n\n                    {recipe.preparationDescription && \n                        <RecipeModalDirections directions={recipe.preparationDescription ? recipe.preparationDescription : {}} changeHandler={changeHandler}/>\n                    }\n                    \n                    {\n                        recipe.preparationDescription == null && \n                        <RecipeModalDirections directions={{}} changeHandler={changeHandler}/>\n                    }\n                    \n                    \n                    <div style={{display:'flex',justifyContent:'center'}}>\n\n                        <Button onClick={submitHandler} style={{margin: '10px'}} loading={loading}>SUBMIT</Button>\n                        {recipeToEdit && \n                            <Button onClick={deleteHandler} style={{margin: '10px',background:'#e4bb9c',color:'#fff'}} loading={loading}>                                \n                                DELETE\n                            </Button>\n                        }\n                    </div>\n                \n            </StyledWrapper>\n        </Modal>\n    )\n}\n\nexport default NewRecipeModal\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/newRecipeModal/RecipeModalHeader.js",["232"],"import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\n\nimport {StyledInputGroup} from '../../styles/StyledInputGroup'\nimport {CategoryBtn} from '../categoryFilter/CategoryFilter'\n\nimport {categoriesIcons} from '../../utils'\n\nimport {apiCall} from '../../utils'\n\nconst StyledHeader = styled.div`\n    display:flex;\n    justify-content: space-between;\n\n    .image_container {\n        width: 200px;\n        height:200px;\n        border-radius: 12px;\n        background: ${({theme}) => theme.primaryColor};\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: ${({theme}) => theme.bgSecondary};\n        position: relative;\n        overflow: hidden;\n        img {\n            object-fit: cover;\n            min-width:100%;\n            min-height:100%;\n            width:100%;\n            z-index: 1;\n        }\n\n        label {\n            height:30px;\n            width:100%;\n            display:flex;\n            align-items:center;\n            justify-content:center;\n            background: rgba(0,0,0,0.6);\n            cursor: pointer;\n            position: absolute;\n            top: 45%;\n            left: 0px;\n            &:hover {\n                text-decoration: underline;\n            }\n            z-index: 2;\n        }\n    }\n\n`\n\nconst RecipeModalHeader = ({name, photo, category, preparationTime, numberOfServings, changeHandler, setPhoto}) => {\n\n    const photoChangeHandler = (e) => {        \n        if(e.target.files[0]) {            \n            const reader = new FileReader()\n\n            reader.onload = function(e) {\n                setPreviewPhoto(e.target.result)\n            }\n\n            reader.readAsDataURL(e.target.files[0])\n\n            setPhoto(e.target.files[0])\n        }else{\n            setPreviewPhoto(null)\n            setPhoto('')\n        }\n    }\n\n    useEffect(() => {\n        if(photo != '' && typeof(photo) !== 'object') {\n            if(photo.startsWith('http')) {\n                setPreviewPhoto(photo)\n            }\n        }\n    }, [photo])\n\n    const [previewPhoto, setPreviewPhoto] = useState(null)\n\n    const [categories, setCategories] = useState([])\n\n    useEffect(() => {\n        async function getCategories() {\n            let res = await apiCall('/categories')\n            \n            if(res.success) {\n                setCategories(res.data)\n            }\n        }\n        getCategories()\n    }, [])\n\n    return (\n        <StyledHeader>\n\n            <div style={{maxWidth: '500px'}}>\n                <StyledInputGroup>\n                    <label htmlFor=\"\">Name</label>\n                    <input type=\"text\" placeholder='Some Awesome Recipe Name' value={name} onChange={(e) => changeHandler('name', e.target.value)} style={{width:'300px'}} required/>\n                </StyledInputGroup>\n\n                <div style={{display:'flex', flexWrap: 'wrap', marginTop:'30px'}}>\n                    {categories.length > 0 && categories.map(cat => \n                        <CategoryBtn onClick={(e) => changeHandler('category', cat._id)} active={category} id={cat._id} title={cat.name} icon={categoriesIcons[cat.name]} key={`iconBtn${cat.name.split(\" \").join('_')}`}/>\n                    )}\n                </div>\n\n                <div style={{display:'flex', width: '100%', marginTop:'30px'}}>\n                    <StyledInputGroup style={{width:'150px'}}>\n                        <label htmlFor=\"\">Prep Time (min)</label>\n                        <input type=\"number\" min='1' placeholder='1 min' value={preparationTime} onChange={(e) => changeHandler('preparationTime', e.target.value)} style={{width:'100px'}} required/>\n                    </StyledInputGroup>\n                    <StyledInputGroup style={{width:'150px'}}>\n                        <label htmlFor=\"\">Num. Of Servings</label>\n                        <input type=\"number\" min='1' placeholder='2' value={numberOfServings} onChange={(e) => changeHandler('numberOfServings', e.target.value)} style={{width:'100px'}} required/>\n                    </StyledInputGroup>\n                </div>\n            </div>\n\n            <div className='image_container'>\n                {previewPhoto && <img src={previewPhoto} alt=\"\"/> }\n                <label htmlFor=\"photo\">Select photo to upload</label>\n                <input onChange={photoChangeHandler} type=\"file\" id='photo' style={{display:'none'}}/>\n            </div>\n        </StyledHeader>\n    )\n}\n\nexport default RecipeModalHeader\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/newRecipeModal/RecipeModalIngredients.js",["233"],"import React, {useState} from 'react'\nimport styled from 'styled-components'\n\nimport {StyledInputGroup} from '../../styles/StyledInputGroup'\nimport Button from '../../ui/Button'\n\nconst StyledIngredients = styled.div`\n    .new_ing_input {\n        display:flex;\n        .btn {\n            height:45px;\n            margin: 0px 10px;\n            font-size: 1.5rem;\n        }\n    }\n\n    .ingredients_container {\n        margin: 10px 0px 30px;\n    }\n`\n\nconst StyledIngredient = styled.div`\n    display: flex;\n    align-items: center;\n    height: 30px;\n    cursor: pointer;\n    .bullet {\n        width: 12px;\n        height:12px;\n        border-radius: 50%;\n        border: 3px solid ${({theme}) => theme.primaryColor};\n        margin-right: 15px;\n    }\n\n    .title {\n        width: 400px;\n    }\n\n    button {\n        background: ${({theme}) => theme.primaryColor};\n        color: ${({theme}) => theme.bgSecondary};\n        border:none;\n        border-radius: 4px;\n        display: none;\n        align-items: center;\n    }\n\n    &:hover {\n        .title {\n            text-decoration: underline;\n        }\n\n        button {\n            display: flex;\n        }\n    }\n`\n\nfunction Ingredient({ingredient, delIng}) {\n\n    return (\n        <StyledIngredient>\n            <div className='bullet'></div>\n            <div className='title'>\n                {ingredient}\n            </div>\n            <button onClick={delIng}>\n                <span className=\"material-icons\">\n                    close\n                </span>\n            </button>\n        </StyledIngredient>\n    )\n}\n\n\nconst RecipeModalIngredients = ({ingredients, addIngredient, deleteIngredient}) => {\n\n    const [ingredient, setIngredient] = useState('')\n\n    const addIngredientHandler = () => {        \n        if(ingredient.trim() == '') return        \n        addIngredient(ingredient)\n        setIngredient('')\n    }\n\n    const deleteIngredientHandler = (index) => {        \n        deleteIngredient(index)\n    }\n\n    return (\n        <StyledIngredients>\n\n                <StyledInputGroup>\n                    <label htmlFor=\"\">Add Ingredient</label>\n                    <div className='new_ing_input'>\n                        <input type=\"text\" placeholder='Ingredient XYZ' value={ingredient} onChange={(e) => setIngredient(e.target.value)} style={{width:'300px'}} required/>\n                        <Button onClick={addIngredientHandler} className='btn'>+</Button>\n                    </div>\n                </StyledInputGroup>\n\n\n                <div className='ingredients_container'>\n\n                    {ingredients.map((ing, i) => <Ingredient ingredient={ing} delIng={() => deleteIngredientHandler(i)} key={`${i}-${ing}`}/>)}\n\n                </div>\n        </StyledIngredients>\n    )\n}\n\nexport default RecipeModalIngredients\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/newRecipeModal/RecipeModalDirections.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/context/RecipesContext.js",["234","235","236","237","238","239","240","241","242"],"import {createContext, useContext, useState, useEffect} from 'react'\nimport {apiCall} from '../utils'\nimport {toast} from 'react-toastify'\nimport {useLocation} from 'react-router-dom'\nimport {useAuthContext} from './AuthContext'\n\nconst RecipeContext = createContext(null)\n\nexport const useRecipeContext = () => useContext(RecipeContext)\n\nconst RecipeProvider = ({children}) => {\n\n    let location = useLocation()\n\n    const {user} = useAuthContext()\n\n    const [myRecipes, setMyRecipes] = useState([])\n    \n    const [recipesLoading, setRecipesLoading] = useState(false)\n\n    const [page, setPage] = useState(0)\n    const [numOfPages, setNumOfPages] = useState(1)\n    const [recipes, setRecipes] = useState([])\n    \n    const [recipeToEdit, setRecipeToEdit] = useState(null)\n    \n    const [nameQuery, setNameQuery] = useState('')\n    const [categoryQuery, setCategoryQuery] = useState('')\n\n\n    useEffect(() => {\n            if(location.pathname == '/') {\n                getRecipes()\n            }else if(location.pathname == '/my-recipes') {\n                getMyRecipes()\n            }            \n    }, [nameQuery, categoryQuery])\n\n    useEffect(() => {\n        if(location.pathname == '/') {\n            getRecipes()\n        }\n    }, [page])\n\n\n    const getMyRecipes = async () => {\n        \n            setRecipesLoading(true)\n            try {\n\n                let name = ''\n\n                if(nameQuery != '') {\n                    name = `&name=${nameQuery}`\n                }\n\n                let category = ''\n\n                if(categoryQuery != '') {\n                    category = `&category=${categoryQuery}`\n                }\n\n                const res = await apiCall(`/recipes?user=${user._id}${name}${category}&limit=1000`)\n                \n                setMyRecipes(res.data)                     \n                setRecipesLoading(false)\n            }catch(err) {\n                setRecipesLoading(false)\n                return toast.error('Error getting user recipes')\n            }        \n    }\n        \n\n    const getRecipes = async () => {\n        setRecipesLoading(true)\n        try {\n\n            let name = ''\n\n            if(nameQuery != '') {\n                name = `name=${nameQuery}&`\n            }\n\n            let category = ''\n\n            if(categoryQuery != '') {\n                category = `category=${categoryQuery}`\n            }            \n            const res = await apiCall(`/recipes?${name}${category}&page=${page + 1}`)\n            \n            setNumOfPages(res.pagination.totalPages)       \n            setRecipes(res.data)            \n            setRecipesLoading(false)\n        }catch(err) {\n            setRecipesLoading(false)\n            return toast.error('Error getting recipes')\n        }      \n    }\n    \n\n    return (\n        <RecipeContext.Provider value={{\n            myRecipes,\n            setMyRecipes,\n            getMyRecipes,\n            recipesLoading,\n            recipeToEdit,\n            setRecipeToEdit,\n            getRecipes,\n            recipes,\n            setNameQuery,\n            setCategoryQuery,\n            nameQuery,\n            numOfPages,\n            page,\n            setPage\n        }}>\n            {children}\n        </RecipeContext.Provider>\n    )\n}\n\nexport default RecipeProvider\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/utils/createNewEditor.js",["243"],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/ParseEditorJs.js",["244","245","246","247","248","249","250","251","252","253","254"],"import React from 'react'\nimport { v4 as uuidv4 } from 'uuid';\n//parsing blocks from editor-js\n\n\n\nconst ParseEditorJs = ({data}) => {\n    \n    let {blocks} = JSON.parse(data)\n\n\n    return (\n        <>\n            {blocks && blocks.length > 0 && blocks.map(block => {\n                switch (block.type) {\n                    case 'header':\n                        if(block.data.level == 1) {\n                            return <h1 key={uuidv4()}>{block.data.text}</h1>\n                        }\n                        if(block.data.level == 2) {\n                            return <h2 key={uuidv4()}>{block.data.text}</h2>\n                        }\n                        if(block.data.level == 3) {\n                            return <h3 key={uuidv4()}>{block.data.text}</h3>\n                        }\n                        if(block.data.level == 4) {\n                            return <h4 key={uuidv4()}>{block.data.text}</h4>\n                        }\n                        if(block.data.level == 5) {\n                            return <h5 key={uuidv4()}>{block.data.text}</h5>\n                        }\n                        if(block.data.level == 6) {\n                            return <h6 key={uuidv4()}>{block.data.text}</h6>\n                        }\n                        break;\n                    case 'paragraph':\n                        return <p key={uuidv4()}>{block.data.text}</p>\n                        break;\n                    case 'list':\n                        if(block.data.style == 'ordered') {\n                            return (<ol key={uuidv4()}>\n                                {block.data.items.map(item => {\n                                    return <li key={uuidv4()}>{item}</li>\n                                })}\n                            </ol>)\n                        }\n                        if(block.data.style == 'unordered') {\n                            return (<ul key={uuidv4()}>\n                                {block.data.items.map(item => {\n                                    return <li key={uuidv4()}>{item}</li>\n                                })}\n                            </ul>)\n                        }\n                        break;                    \n                    default:\n                        return ''\n                        break;\n                }\n            })}\n        </>\n    )\n}\n\nexport default ParseEditorJs\n","/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/StarRating.js",[],"/Users/boki/Documents/projects/100daysOfCode/my-recipes-client/src/components/FavoritesIcon.js",["255","256"],{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":9,"nodeType":"263","messageId":"264","endLine":1,"endColumn":17},{"ruleId":"261","severity":1,"message":"265","line":2,"column":9,"nodeType":"263","messageId":"264","endLine":2,"endColumn":24},{"ruleId":"261","severity":1,"message":"266","line":2,"column":26,"nodeType":"263","messageId":"264","endLine":2,"endColumn":32},{"ruleId":"261","severity":1,"message":"267","line":14,"column":7,"nodeType":"263","messageId":"264","endLine":14,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":1,"column":20,"nodeType":"263","messageId":"264","endLine":1,"endColumn":28},{"ruleId":"268","severity":1,"message":"269","line":111,"column":8,"nodeType":"270","endLine":111,"endColumn":10,"suggestions":"271"},{"ruleId":"272","severity":1,"message":"273","line":149,"column":66,"nodeType":"274","messageId":"275","endLine":149,"endColumn":68},{"ruleId":"272","severity":1,"message":"276","line":76,"column":18,"nodeType":"274","messageId":"275","endLine":76,"endColumn":20},{"ruleId":"268","severity":1,"message":"277","line":80,"column":8,"nodeType":"270","endLine":80,"endColumn":27,"suggestions":"278"},{"ruleId":"272","severity":1,"message":"276","line":83,"column":30,"nodeType":"274","messageId":"275","endLine":83,"endColumn":32},{"ruleId":"272","severity":1,"message":"276","line":83,"column":58,"nodeType":"274","messageId":"275","endLine":83,"endColumn":60},{"ruleId":"268","severity":1,"message":"279","line":92,"column":8,"nodeType":"270","endLine":92,"endColumn":21,"suggestions":"280"},{"ruleId":"261","severity":1,"message":"281","line":2,"column":17,"nodeType":"263","messageId":"264","endLine":2,"endColumn":34},{"ruleId":"272","severity":1,"message":"273","line":23,"column":47,"nodeType":"274","messageId":"275","endLine":23,"endColumn":49},{"ruleId":"272","severity":1,"message":"276","line":72,"column":18,"nodeType":"274","messageId":"275","endLine":72,"endColumn":20},{"ruleId":"268","severity":1,"message":"282","line":77,"column":8,"nodeType":"270","endLine":77,"endColumn":27,"suggestions":"283"},{"ruleId":"272","severity":1,"message":"273","line":80,"column":24,"nodeType":"274","messageId":"275","endLine":80,"endColumn":26},{"ruleId":"261","severity":1,"message":"284","line":4,"column":27,"nodeType":"263","messageId":"264","endLine":4,"endColumn":41},{"ruleId":"272","severity":1,"message":"276","line":133,"column":33,"nodeType":"274","messageId":"275","endLine":133,"endColumn":35},{"ruleId":"272","severity":1,"message":"276","line":142,"column":36,"nodeType":"274","messageId":"275","endLine":142,"endColumn":38},{"ruleId":"268","severity":1,"message":"285","line":176,"column":8,"nodeType":"270","endLine":176,"endColumn":10,"suggestions":"286"},{"ruleId":"272","severity":1,"message":"276","line":237,"column":51,"nodeType":"274","messageId":"275","endLine":237,"endColumn":53},{"ruleId":"272","severity":1,"message":"276","line":269,"column":49,"nodeType":"274","messageId":"275","endLine":269,"endColumn":51},{"ruleId":"272","severity":1,"message":"276","line":291,"column":48,"nodeType":"274","messageId":"275","endLine":291,"endColumn":50},{"ruleId":"272","severity":1,"message":"273","line":29,"column":27,"nodeType":"274","messageId":"275","endLine":29,"endColumn":29},{"ruleId":"261","severity":1,"message":"287","line":48,"column":10,"nodeType":"263","messageId":"264","endLine":48,"endColumn":14},{"ruleId":"272","severity":1,"message":"276","line":53,"column":17,"nodeType":"274","messageId":"275","endLine":53,"endColumn":19},{"ruleId":"272","severity":1,"message":"273","line":53,"column":32,"nodeType":"274","messageId":"275","endLine":53,"endColumn":34},{"ruleId":"272","severity":1,"message":"273","line":53,"column":50,"nodeType":"274","messageId":"275","endLine":53,"endColumn":52},{"ruleId":"288","severity":1,"message":"289","line":105,"column":62,"nodeType":"290","endLine":105,"endColumn":109},{"ruleId":"261","severity":1,"message":"287","line":47,"column":10,"nodeType":"263","messageId":"264","endLine":47,"endColumn":14},{"ruleId":"272","severity":1,"message":"273","line":52,"column":18,"nodeType":"274","messageId":"275","endLine":52,"endColumn":20},{"ruleId":"272","severity":1,"message":"273","line":52,"column":36,"nodeType":"274","messageId":"275","endLine":52,"endColumn":38},{"ruleId":"288","severity":1,"message":"289","line":110,"column":64,"nodeType":"290","endLine":110,"endColumn":112},{"ruleId":"261","severity":1,"message":"291","line":1,"column":46,"nodeType":"263","messageId":"264","endLine":1,"endColumn":55},{"ruleId":"261","severity":1,"message":"292","line":2,"column":9,"nodeType":"263","messageId":"264","endLine":2,"endColumn":16},{"ruleId":"272","severity":1,"message":"273","line":35,"column":30,"nodeType":"274","messageId":"275","endLine":35,"endColumn":32},{"ruleId":"272","severity":1,"message":"273","line":35,"column":56,"nodeType":"274","messageId":"275","endLine":35,"endColumn":58},{"ruleId":"272","severity":1,"message":"276","line":53,"column":32,"nodeType":"274","messageId":"275","endLine":53,"endColumn":34},{"ruleId":"272","severity":1,"message":"276","line":53,"column":53,"nodeType":"274","messageId":"275","endLine":53,"endColumn":55},{"ruleId":"261","severity":1,"message":"293","line":1,"column":8,"nodeType":"263","messageId":"264","endLine":1,"endColumn":13},{"ruleId":"268","severity":1,"message":"294","line":17,"column":10,"nodeType":"270","endLine":17,"endColumn":15,"suggestions":"295"},{"ruleId":"261","severity":1,"message":"291","line":1,"column":9,"nodeType":"263","messageId":"264","endLine":1,"endColumn":18},{"ruleId":"261","severity":1,"message":"262","line":1,"column":16,"nodeType":"263","messageId":"264","endLine":1,"endColumn":24},{"ruleId":"261","severity":1,"message":"296","line":2,"column":9,"nodeType":"263","messageId":"264","endLine":2,"endColumn":14},{"ruleId":"261","severity":1,"message":"292","line":10,"column":9,"nodeType":"263","messageId":"264","endLine":10,"endColumn":16},{"ruleId":"268","severity":1,"message":"297","line":55,"column":8,"nodeType":"270","endLine":55,"endColumn":10,"suggestions":"298"},{"ruleId":"272","severity":1,"message":"273","line":80,"column":70,"nodeType":"274","messageId":"275","endLine":80,"endColumn":72},{"ruleId":"272","severity":1,"message":"276","line":68,"column":76,"nodeType":"274","messageId":"275","endLine":68,"endColumn":78},{"ruleId":"272","severity":1,"message":"276","line":131,"column":67,"nodeType":"274","messageId":"275","endLine":131,"endColumn":69},{"ruleId":"272","severity":1,"message":"273","line":140,"column":31,"nodeType":"274","messageId":"275","endLine":140,"endColumn":33},{"ruleId":"272","severity":1,"message":"273","line":140,"column":56,"nodeType":"274","messageId":"275","endLine":140,"endColumn":58},{"ruleId":"272","severity":1,"message":"276","line":163,"column":56,"nodeType":"274","messageId":"275","endLine":163,"endColumn":58},{"ruleId":"272","severity":1,"message":"276","line":74,"column":18,"nodeType":"274","messageId":"275","endLine":74,"endColumn":20},{"ruleId":"272","severity":1,"message":"273","line":82,"column":30,"nodeType":"274","messageId":"275","endLine":82,"endColumn":32},{"ruleId":"272","severity":1,"message":"273","line":32,"column":34,"nodeType":"274","messageId":"275","endLine":32,"endColumn":36},{"ruleId":"272","severity":1,"message":"273","line":34,"column":40,"nodeType":"274","messageId":"275","endLine":34,"endColumn":42},{"ruleId":"268","severity":1,"message":"299","line":37,"column":8,"nodeType":"270","endLine":37,"endColumn":34,"suggestions":"300"},{"ruleId":"272","severity":1,"message":"273","line":40,"column":30,"nodeType":"274","messageId":"275","endLine":40,"endColumn":32},{"ruleId":"268","severity":1,"message":"301","line":43,"column":8,"nodeType":"270","endLine":43,"endColumn":14,"suggestions":"302"},{"ruleId":"272","severity":1,"message":"276","line":53,"column":30,"nodeType":"274","messageId":"275","endLine":53,"endColumn":32},{"ruleId":"272","severity":1,"message":"276","line":59,"column":34,"nodeType":"274","messageId":"275","endLine":59,"endColumn":36},{"ruleId":"272","severity":1,"message":"276","line":80,"column":26,"nodeType":"274","messageId":"275","endLine":80,"endColumn":28},{"ruleId":"272","severity":1,"message":"276","line":86,"column":30,"nodeType":"274","messageId":"275","endLine":86,"endColumn":32},{"ruleId":"303","severity":1,"message":"304","line":6,"column":1,"nodeType":"305","endLine":26,"endColumn":5},{"ruleId":"306","severity":1,"message":"307","line":14,"column":62,"nodeType":"308","messageId":"309","endLine":14,"endColumn":64},{"ruleId":"272","severity":1,"message":"273","line":17,"column":45,"nodeType":"274","messageId":"275","endLine":17,"endColumn":47},{"ruleId":"272","severity":1,"message":"273","line":20,"column":45,"nodeType":"274","messageId":"275","endLine":20,"endColumn":47},{"ruleId":"272","severity":1,"message":"273","line":23,"column":45,"nodeType":"274","messageId":"275","endLine":23,"endColumn":47},{"ruleId":"272","severity":1,"message":"273","line":26,"column":45,"nodeType":"274","messageId":"275","endLine":26,"endColumn":47},{"ruleId":"272","severity":1,"message":"273","line":29,"column":45,"nodeType":"274","messageId":"275","endLine":29,"endColumn":47},{"ruleId":"272","severity":1,"message":"273","line":32,"column":45,"nodeType":"274","messageId":"275","endLine":32,"endColumn":47},{"ruleId":"310","severity":1,"message":"311","line":38,"column":25,"nodeType":"312","messageId":"313","endLine":38,"endColumn":31},{"ruleId":"272","severity":1,"message":"273","line":40,"column":45,"nodeType":"274","messageId":"275","endLine":40,"endColumn":47},{"ruleId":"272","severity":1,"message":"273","line":47,"column":45,"nodeType":"274","messageId":"275","endLine":47,"endColumn":47},{"ruleId":"310","severity":1,"message":"311","line":57,"column":25,"nodeType":"312","messageId":"313","endLine":57,"endColumn":31},{"ruleId":"272","severity":1,"message":"273","line":35,"column":42,"nodeType":"274","messageId":"275","endLine":35,"endColumn":44},{"ruleId":"268","severity":1,"message":"314","line":44,"column":8,"nodeType":"270","endLine":44,"endColumn":10,"suggestions":"315"},"no-native-reassign",["316"],"no-negated-in-lhs",["317"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'AnimatePresence' is defined but never used.","'motion' is defined but never used.","'pageVariants' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRecipes', 'setCategoryQuery', and 'setNameQuery'. Either include them or remove the dependency array.","ArrayExpression",["318"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'route'. Either include it or remove the dependency array.",["319"],"React Hook useEffect has missing dependencies: 'history', 'location.pathname', and 'searchHandler'. Either include them or remove the dependency array.",["320"],"'createGlobalStyle' is defined but never used.","React Hook useEffect has missing dependencies: 'route' and 'setCategoryQuery'. Either include them or remove the dependency array.",["321"],"'useAuthContext' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["322"],"'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'apiCall' is defined but never used.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'cb'. Either include it or remove the dependency array. If 'cb' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["323"],"'toast' is defined but never used.","React Hook useEffect has missing dependencies: 'getMyRecipes' and 'user._id'. Either include them or remove the dependency array.",["324"],"React Hook useEffect has missing dependencies: 'getMyRecipes', 'getRecipes', and 'location.pathname'. Either include them or remove the dependency array.",["325"],"React Hook useEffect has missing dependencies: 'getRecipes' and 'location.pathname'. Either include them or remove the dependency array.",["326"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","React Hook useEffect has missing dependencies: 'favs' and 'recipe._id'. Either include them or remove the dependency array.",["327"],"no-global-assign","no-unsafe-negation",{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},"Update the dependencies array to be: [getRecipes, setCategoryQuery, setNameQuery]",{"range":"348","text":"349"},"Update the dependencies array to be: [location.pathname, route]",{"range":"350","text":"351"},"Update the dependencies array to be: [history, location.pathname, searchHandler, searchQuery]",{"range":"352","text":"353"},"Update the dependencies array to be: [location.pathname, route, setCategoryQuery]",{"range":"354","text":"355"},"Update the dependencies array to be: [id]",{"range":"356","text":"357"},"Update the dependencies array to be: [cb, ref]",{"range":"358","text":"359"},"Update the dependencies array to be: [getMyRecipes, user._id]",{"range":"360","text":"361"},"Update the dependencies array to be: [nameQuery, categoryQuery, location.pathname, getRecipes, getMyRecipes]",{"range":"362","text":"363"},"Update the dependencies array to be: [getRecipes, location.pathname, page]",{"range":"364","text":"365"},"Update the dependencies array to be: [favs, recipe._id]",{"range":"366","text":"367"},[2545,2547],"[getRecipes, setCategoryQuery, setNameQuery]",[1694,1713],"[location.pathname, route]",[1991,2004],"[history, location.pathname, searchHandler, searchQuery]",[1825,1844],"[location.pathname, route, setCategoryQuery]",[4125,4127],"[id]",[532,537],"[cb, ref]",[1485,1487],"[getMyRecipes, user._id]",[1109,1135],"[nameQuery, categoryQuery, location.pathname, getRecipes, getMyRecipes]",[1241,1247],"[getRecipes, location.pathname, page]",[1064,1066],"[favs, recipe._id]"]